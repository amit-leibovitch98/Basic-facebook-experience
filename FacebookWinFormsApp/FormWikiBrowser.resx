<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMHB
        wQDJyckCtra2I7S0tGWysrKgrKyswqampsygoKDFmpqap5SUlHCLi4stjY2NBI2NjQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDQ
        0AC7u7sAy8vLIMTExITBwcHZvb29+r6+vv+7u7v/uLi4/7CwsP+np6f/n5+f/JWVleGMjIyWjY2NLaur
        qwGYmJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADj4+MA8/PzAtLS0kzPz8/RyMjI/9DQ0P/MzMz/y8vL/8bGxv/ExMT/vLy8/7S0tP+wsLD/pqam/5aW
        lv+JiYnfhoaGY6ampgacnJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA7OzsAP///wHOzs5czs7O6dbW1v/Y2Nj/zs7O/6qqqv+ysrL/sbGx/8fHx//FxcX/urq6/7y8
        vP+wsLD/qamp/5aWlv+IiIj0iIiIeKCgoAWXl5cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOvr6wCampoAurq6Rrq6uufIyMj/2tra/+Pj4//IyMj/ubm5/7i4uP+6urr/ysrK/8jI
        yP/Jycn/xcXF/7u7u/+zs7P/pqam/5iYmP+Ojo7zjIyMY1ZWVgCbm5sAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA3t7eAOTk5BnDw8PHx8fH/9/f3//b29v/4eHh/9bW1v/d3d3/0NDQ/9vb
        2//Z2dn/ysrK/8vLy//Nzc3/tra2/6SkpP+cnJz/nJyc/5eXl/+KiorejIyMLYmJiQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOTk5ADd3d0A4ODgc+Pj4/7p6en/4ODg/+bm5v/n5+f/5eXl/+Tk
        5P/e3t7/2tra/9HR0f/IyMj/zs7O/8zMzP+/v7//o6Oj/46Ojv+lpaX/oaGh/42Njf+FhYWUxsbGAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5OTkAOrq6hPf39/J2NjY//Dw8P/m5ub/4+Pj/9ra
        2v+0tLT/q6ur/729vf/k5OT/1tbW/9HR0f/a2tr/0NDQ/8PDw//IyMj/urq6/7Kysv+lpaX/lZWV/3l5
        eeCDg4MtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADk5OQA6enpQMvLy/O7u7v/8PDw/+np
        6f/k5OT/19fX/66urv+enp7/w8PD/+np6f/g4OD/1NTU/9DQ0P/R0dH/ycnJ/8TExP+8vLz/t7e3/6ur
        q/+fn5//aGho/GRkZG8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByRC0AdEcvBFIYABjTysWG7e3t/+rq
        6v/t7e3/7Ozs//Hx8f/l5eX/5eXl/9vb2//o6Oj/6enp/9jY2P/Z2dn/0NDQ/7y8vP+ZmZn/vb29/76+
        vv+9vb3/r6+v/6ampv+JiYn/enp6pgAAAAAAAAAAAAAAAGw/HgBkMRgAYi4UCW09JUdyRC2fi2VR2M7B
        u/by8vL/8fHx/+7u7v/o6Oj/7e3t/+bm5v/u7u7/3t7e/+np6f/n5+f/1NTU/+Pj4//d3d3/wcHB/6en
        p/+Kior/tbW1/8LCwv+zs7P/p6en/5SUlP+JiYnFAAAAAAAAAABsPSYAe085AG09JSmBV0Ojr5SH86eK
        e/+Vc2L/2dDL/+7v7//y8vL/9vb2/+3t7f/29vb/4uLi/+bm5v/p6en/6Ojo/+Pj4//T09P/3d3d/9vb
        2//Z2dn/2dnZ/729vf/IyMj/wsLC/7S0tP+qqqr/jo6O/4ODg8wAAAAAcUMpAHVGNABwQSo/eEw20p9/
        cP++qZ//iGJO/3BBKf+4o5j/2dra/9XV1f/v7+//9fX1//Pz8/+xsbH/vLy8/8XFxf/u7u7/6urq/9jY
        2P/n5+f/3Nzc/9DQ0P/Y2Nj/zc3N/8rKyv+/v7//ubm5/6ioqP94eHj/fHx8w3RELQBzRS4Abj8mN5Z0
        Y9nBraP/f1VA/3JFLv9xQiv/cEEq/6mNgP/Q0ND/x8fH//Pz8//19fX/+fn5/93d3f/Pz8//09PT/+Hh
        4f/j4+P/5OTk/+vr6//i4uL/2NjY/9HR0f/Q0ND/zc3N/76+vv+9vb3/q6ur/5GRkf+Dg4OhcUIrAG09
        JRZ3SjS+wa2j/518bP9yQyz/ckQt/3JELf9wQir/kW5d/+Xi4f/w8PD/9/f3//Dw8P/29vb/t7e3/8vL
        y//t7e3/5+fn/+Tk5P/p6en/6Ojo/7y8vP+0tLT/0dHR/9PT0//Nzc3/wcHB/7u7u/+srKz/m5ub+pGR
        kWiJY1EAd0o0dZRxX/6EXEj/ckQt/3JELf9yRC3/ckQt/3BCK/+KZFH/6+fl//Pz8//z8/P/p6en/8HB
        wf+ZmZn/np6e/97e3v/y8vL/4uLi/+bm5v/f39//s7Oz/56env/BwcH/zMzM/8rKyv/Gxsb/tra2/6en
        p/+ZmZnal5eXJmMwFh2Wc2LQzLy0/3lNOP9xQyz/ckQt/3JELf9yRC3/cEIr/4tmU//x7ez/8fLy//f3
        9/+goKD/c3Nz/5CQkP+bnJz/pKSl/7O0tP/S0tL/5+fn/+Li4v/l5eX/2tra/9LS0v/Q0ND/ysrK/8fH
        x/+Wlpb/kJCQ/5ubm4rBwcEBbDwkXqGCcvilh3n/cEIr/3JELf9yRC3/ckQt/3JELf9wQiv/i2ZT//Tx
        7//w8PD/5eXl/+vr6/+npaT/c19V/4dwZP+Wko//l5GO/9LPzv/r6+v/29vb/97e3v/X19f/1tbW/8vL
        y//Ly8v/wMDA/6ioqP+bm5vVnZ2dJZmZmQB2SjOckGxZ/3lNN/9yQyz/ckQt/3JELf9yRC3/ckQt/3BC
        K/+LZlP/9fLw//Xz8v/j3Nn/7O3t/3dvav9rQy//c0Uu/3xZR/96V0b/eGtk/62opf/LzMz/3t7e/9/f
        3//V1dX/zs7O/8bGxv+7u7v/sLCw6aamplWoqKgAp6enAIZeSsLKubD/fVM9/3FDLP9yRC3/ckQt/3JE
        Lf9yRC3/cEEq/4plUv/28/H/6uPg/5Z1ZP/Z0c3/tra2/11BM/9zRC3/cEEp/41qWf/Bvbv/xsXF/7y8
        vP++v7//2NjY/9HR0f/BwcH/r6+v/7q6utG8vLxBz8/PBMPDwwAAAAAAiWJO0sKuo/94TDb/ckQt/3JE
        Lf9yRC3/ckQt/3FDK/+dfW3/0cK7//v6+f/39PP/y7qx/9THwP+yqKT/YVdS/2M/Lf9yRC3/eEw2/4tp
        V/+7s6//vrWw/bu0sdfV1tbswsLC/ZmZmfahoaG9vr6+QpmZmQDg4OAAAAAAAAAAAAB3SzXMimRR/3RH
        MP9yRC3/ckQt/3JELf9yRC3/cEIq/7ulm///////////////////////7+ro/4xnVf+EaFr/ako6/3JE
        Lf9yQyz/cUMs/4hjUf+FXkr7fVM/WuDk5jK4uLhduLi4VLe3tw6EhIQAx8fHAAAAAAAAAAAAAAAAAHxR
        O7HAq6H/hFtH/3FDK/9yRC3/ckQt/3JELf9xQyz/i2VS/7SckP/59/b/8u7s/6yRhP+efm//eU44/3FC
        K/9zRS7/ckQt/3JELf9wQir/qo6A/6OEdfNpNx87ckQtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAc0YvfcGto/6ZeGj/cEEq/3JELf9yRC3/ckQt/3JELf9vQCn/imNQ//bz8f/r5eL/fFI9/2w9
        Jf9xQyz/ckQt/3JELf9yRC3/ckQt/3RHMP/Fs6n/mnlo2mEuExxyRCwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABuPyc6iGFO6YpjUP9yRC3/ckQt/3JELf9yRC3/ckQt/3FCK/+FXkr/8Ovo//n3
        9v+8p5z/pYh5/3pOOf9xQyz/ckQt/3JELf9xQyz/eEw2/5NwXv97UDuhWCEDA3JELAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAG0+Jgh1RzGmu6SZ/5RwX/9xQiv/ckQt/3JELf9yRC3/ckQt/3VH
        Mf/Aq6H//Pv7///////x7Or/hl9L/3FCK/9yRC3/ckQt/3VHMf+4oZX/lXNh82s6IkpxQisAc0AnAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAc0YuAG09JT2hgnPpw6+l/3RHMP9xQyz/ckQt/3JE
        Lf9yRC3/cUMs/3hNN/+ef2//tZ2R/62Thf97UDv/cUMs/3JELf9vQCj/k29e/8m3rv+BV0OmYy8VCXNF
        LQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByRCwAWiUIAnZKM3iGX0v6m3pq/4BW
        Qv9xQiv/ckQt/3JELf9yRC3/ckMs/3BBKv9wQSr/cEEq/3JELP9yRC3/ckQt/5JvXf+QbFr/gllE1G4+
        JixwQSkAdUMsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABvQCgAbDwjC3FD
        LI6ulIf6zby0/4NbR/9wQir/cEEq/3JDLP9yQyz/ckMs/3JELf9xQiv/cEEq/3JDLP+ninv/0MC4/4pk
        UdxrOiJDbjwmAHJFLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABxQioAbDwjC3VJMniWdGPqjWhV/7SckP+dfW3/eU04/3hMNv96Tjn/dUgy/4dgTf+vlYj/n4Bw/5Rw
        X/2JYk/CbT4lOV0rEgB0RS4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABoNh0AZTIYA2o5ID13SzWoooR16rymm/6MZ1T/uqOY/828tP+YdmX/pol6/7ig
        lfmNZ1TTbj4meGg3HhhqOSAAaTchAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxRC0AZjMaAGk4HwlpNx47cUIrgHRGMLSFXUnPi2VS1XxQ
        O8ZyRS2fbj4mYWc1HB97TzgBc0UtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//4AP//8AA//8AAH/+AAA//gAAP/wAAB/8AAAP+AAAD/gAAA/gAAAPgA
        AADwAAAA4AAAAMAAAACAAAAAgAAAAAAAAAAAAAABAAAAAwAAAAMAAAAPAAAAHwAAAf8AAAH/AAAB/wAA
        A/+AAAP/gAAH/8AAD//gAB//8AA///wAf/8=
</value>
  </data>
</root>